{"version":3,"file":"338.4a5c4850b4a620cd.bundle.js","mappings":"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","sources":["webpack://WebComponents/./runestone/mchoice/js/mchoice.js","webpack://WebComponents/./runestone/mchoice/js/timedmc.js"],"sourcesContent":["/*==========================================\n========      Master mchoice.js     =========\n============================================\n===  This file contains the JS for the   ===\n=== Runestone multiple choice component. ===\n============================================\n===              Created By              ===\n===           Isaiah Mayerchak           ===\n===                 and                  ===\n===             Kirby Olson              ===\n===                6/4/15                ===\n==========================================*/\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\n//import \"./../styles/runestone-custom-sphinx-bootstrap.css\";\nimport \"../css/mchoice.css\";\n\nwindow.mcList = {}; // Multiple Choice dictionary\n\n// MC constructor\nexport default class MultipleChoice extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        opts = opts || {};\n        var orig = opts.orig; // entire <ul> element\n        this.origElem = orig;\n        this.useRunestoneServices = opts.useRunestoneServices;\n        this.multipleanswers = false;\n        this.divid = orig.id;\n        if ($(this.origElem).data(\"multipleanswers\") === true) {\n            this.multipleanswers = true;\n        }\n        this.children = this.origElem.childNodes;\n        this.random = false;\n        if ($(this.origElem).is(\"[data-random]\")) {\n            this.random = true;\n        }\n        this.correct = null;\n        this.answerList = [];\n        this.correctList = [];\n        this.correctIndexList = [];\n        this.feedbackList = [];\n        this.question = null;\n        this.caption = \"Multiple Choice\";\n        this.findAnswers();\n        this.findQuestion();\n        this.findFeedbacks();\n        this.createCorrectList();\n        this.createMCForm();\n        this.addCaption(\"runestone\");\n        this.checkServer(\"mChoice\", true);\n        let self = this;\n        // https://docs.mathjax.org/en/latest/options/startup/startup.html\n        // https://docs.mathjax.org/en/latest/web/configuration.html#startup-action\n        // runestoneMathReady is defined in the preamble for all PTX authored books\n        if (typeof runestoneMathready !== \"undefined\") {\n            runestoneMathReady.then(() => self.queueMathJax(self.containerDiv));\n        }\n    }\n\n    /*====================================\n    ==== Functions parsing variables  ====\n    ====  out of intermediate HTML    ====\n    ====================================*/\n    findQuestion() {\n        var delimiter;\n        for (var i = 0; i < this.origElem.childNodes.length; i++) {\n            if (this.origElem.childNodes[i].nodeName === \"LI\") {\n                delimiter = this.origElem.childNodes[i].outerHTML;\n                break;\n            }\n        }\n        var fulltext = $(this.origElem).html();\n        var temp = fulltext.split(delimiter);\n        this.question = temp[0];\n    }\n\n    findAnswers() {\n        // Creates answer objects and pushes them to answerList\n        // format: ID, Correct bool, Content (text)\n        var ChildAnswerList = [];\n        for (var i = 0; i < this.children.length; i++) {\n            if ($(this.children[i]).is(\"[data-component=answer]\")) {\n                ChildAnswerList.push(this.children[i]);\n            }\n        }\n        for (var j = 0; j < ChildAnswerList.length; j++) {\n            var answer_id = $(ChildAnswerList[j]).attr(\"id\");\n            var is_correct = false;\n            if ($(ChildAnswerList[j]).is(\"[data-correct]\")) {\n                // If data-correct attribute exists, answer is correct\n                is_correct = true;\n            }\n            var answer_text = $(ChildAnswerList[j]).html();\n            var answer_object = {\n                id: answer_id,\n                correct: is_correct,\n                content: answer_text,\n            };\n            this.answerList.push(answer_object);\n        }\n    }\n\n    findFeedbacks() {\n        for (var i = 0; i < this.children.length; i++) {\n            if ($(this.children[i]).is(\"[data-component=feedback]\")) {\n                this.feedbackList.push(this.children[i].innerHTML);\n            }\n        }\n    }\n\n    createCorrectList() {\n        // Creates array that holds the ID\"s of correct answers\n        // Also populates an array that holds the indeces of correct answers\n        for (var i = 0; i < this.answerList.length; i++) {\n            if (this.answerList[i].correct) {\n                this.correctList.push(this.answerList[i].id);\n                this.correctIndexList.push(i);\n            }\n        }\n    }\n\n    /*===========================================\n    ====   Functions generating final HTML   ====\n    ===========================================*/\n    createMCForm() {\n        this.renderMCContainer();\n        this.renderMCForm(); // renders the form with options and buttons\n        this.renderMCfeedbackDiv();\n        // replaces intermediate HTML with rendered HTML\n        $(this.origElem).replaceWith(this.containerDiv);\n    }\n\n    renderMCContainer() {\n        this.containerDiv = document.createElement(\"div\");\n        $(this.containerDiv).html(this.question);\n        $(this.containerDiv).addClass(this.origElem.getAttribute(\"class\"));\n        this.containerDiv.id = this.divid;\n    }\n\n    renderMCForm() {\n        this.optsForm = document.createElement(\"form\");\n        this.optsForm.id = this.divid + \"_form\";\n        $(this.optsForm).attr({\n            method: \"get\",\n            action: \"\",\n            onsubmit: \"return false;\",\n        });\n        // generate form options\n        this.renderMCFormOpts();\n        this.renderMCFormButtons();\n        // Append the form to the container\n        this.containerDiv.appendChild(this.optsForm);\n    }\n\n    renderMCFormOpts() {\n        // creates input DOM elements\n        this.optionArray = []; // array with an object for each option containing the input and label for that option\n        var input_type = \"radio\";\n        if (this.multipleanswers) {\n            input_type = \"checkbox\";\n        }\n        // this.indexArray is used to index through the answers\n        // it is just 0-n normally, but the order is shuffled if the random option is present\n        this.indexArray = [];\n        for (var i = 0; i < this.answerList.length; i++) {\n            this.indexArray.push(i);\n        }\n        if (this.random) {\n            this.randomizeAnswers();\n        }\n        let self = this;\n        let answerFunc = function () {\n            self.isAnswered = true;\n        };\n        for (var j = 0; j < this.answerList.length; j++) {\n            var k = this.indexArray[j];\n            var optid = this.divid + \"_opt_\" + k;\n            // Create the label for the input\n            var label = document.createElement(\"label\");\n            // If the content begins with a ``<p>``, put the label inside of it. (Sphinx 2.0 puts all content in a ``<p>``, while Sphinx 1.8 doesn't).\n            var content = this.answerList[k].content;\n            var prefix = \"\";\n            if (content.startsWith(\"<p>\")) {\n                prefix = \"<p>\";\n                content = content.slice(3);\n            }\n            $(label).html(\n                `${prefix}<input type=\"${input_type}\" name=\"group1\" value=${k} id=${optid}>${String.fromCharCode(\n                    \"A\".charCodeAt(0) + j\n                )}. ${content}`\n            );\n            // create the object to store in optionArray\n            var optObj = {\n                input: $(label).find(\"input\")[0],\n                label: label,\n            };\n            optObj.input.onclick = answerFunc;\n\n            this.optionArray.push(optObj);\n            // add the option to the form\n            this.optsForm.appendChild(label);\n            this.optsForm.appendChild(document.createElement(\"br\"));\n        }\n    }\n\n    renderMCFormButtons() {\n        // submit and compare me buttons\n        // Create submit button\n        this.submitButton = document.createElement(\"button\");\n        this.submitButton.textContent = \"Check Me\";\n        $(this.submitButton).attr({\n            class: \"btn btn-success\",\n            name: \"do answer\",\n            type: \"button\",\n        });\n        if (this.multipleanswers) {\n            this.submitButton.addEventListener(\n                \"click\",\n                function () {\n                    this.processMCMASubmission(true);\n                }.bind(this),\n                false\n            );\n        } else {\n            this.submitButton.addEventListener(\n                \"click\",\n                function (ev) {\n                    ev.preventDefault();\n                    this.processMCMFSubmission(true);\n                }.bind(this),\n                false\n            );\n        } // end else\n        this.optsForm.appendChild(this.submitButton);\n        // Create compare button\n        if (this.useRunestoneServices && !eBookConfig.peer) {\n            this.compareButton = document.createElement(\"button\");\n            $(this.compareButton).attr({\n                class: \"btn btn-default\",\n                id: this.divid + \"_bcomp\",\n                disabled: \"\",\n                name: \"compare\",\n            });\n            this.compareButton.textContent = \"Compare me\";\n            this.compareButton.addEventListener(\n                \"click\",\n                function () {\n                    this.compareAnswers(this.divid);\n                }.bind(this),\n                false\n            );\n            this.optsForm.appendChild(this.compareButton);\n        }\n    }\n\n    renderMCfeedbackDiv() {\n        this.feedBackDiv = document.createElement(\"div\");\n        this.feedBackDiv.id = this.divid + \"_feedback\";\n        this.containerDiv.appendChild(document.createElement(\"br\"));\n        this.containerDiv.appendChild(this.feedBackDiv);\n    }\n\n    randomizeAnswers() {\n        // Makes the ordering of the answer choices random\n        var currentIndex = this.indexArray.length,\n            temporaryValue,\n            randomIndex;\n        // While there remain elements to shuffle...\n        while (currentIndex !== 0) {\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            // And swap it with the current element.\n            temporaryValue = this.indexArray[currentIndex];\n            this.indexArray[currentIndex] = this.indexArray[randomIndex];\n            this.indexArray[randomIndex] = temporaryValue;\n            var temporaryFeedback = this.feedbackList[currentIndex];\n            this.feedbackList[currentIndex] = this.feedbackList[randomIndex];\n            this.feedbackList[randomIndex] = temporaryFeedback;\n        }\n    }\n\n    /*===================================\n    === Checking/loading from storage ===\n    ===================================*/\n    restoreAnswers(data) {\n        // Restore answers from storage retrieval done in RunestoneBase\n        // sometimes data.answer can be null\n        if (!data.answer) {\n            data.answer = \"\";\n        }\n        var answers = data.answer.split(\",\");\n        for (var a = 0; a < answers.length; a++) {\n            var index = answers[a];\n            for (var b = 0; b < this.optionArray.length; b++) {\n                if (this.optionArray[b].input.value == index) {\n                    $(this.optionArray[b].input).attr(\"checked\", \"true\");\n                }\n            }\n        }\n        if (this.multipleanswers) {\n            this.processMCMASubmission(false);\n        } else {\n            this.processMCMFSubmission(false);\n        }\n    }\n\n    checkLocalStorage() {\n        // Repopulates MCMA questions with a user's previous answers,\n        // which were stored into local storage.\n        var storedData;\n        var answers;\n        if (this.graderactive) {\n            return;\n        }\n        var len = localStorage.length;\n        if (len > 0) {\n            var ex = localStorage.getItem(this.localStorageKey());\n            if (ex !== null) {\n                try {\n                    storedData = JSON.parse(ex);\n                    answers = storedData.answer.split(\",\");\n                } catch (err) {\n                    // error while parsing; likely due to bad value stored in storage\n                    console.log(err.message);\n                    localStorage.removeItem(this.localStorageKey());\n                    return;\n                }\n                for (var a = 0; a < answers.length; a++) {\n                    var index = answers[a];\n                    for (var b = 0; b < this.optionArray.length; b++) {\n                        if (this.optionArray[b].input.value == index) {\n                            $(this.optionArray[b].input).attr(\n                                \"checked\",\n                                \"true\"\n                            );\n                        }\n                    }\n                }\n                if (this.useRunestoneServices) {\n                    this.enableMCComparison();\n                    this.getSubmittedOpts(); // to populate givenlog for logging\n                    if (this.multipleanswers) {\n                        this.logMCMAsubmission();\n                    } else {\n                        this.logMCMFsubmission();\n                    }\n                }\n            }\n        }\n    }\n\n    setLocalStorage(data) {\n        var timeStamp = new Date();\n        var storageObj = {\n            answer: data.answer,\n            timestamp: timeStamp,\n            correct: data.correct,\n        };\n        localStorage.setItem(\n            this.localStorageKey(),\n            JSON.stringify(storageObj)\n        );\n    }\n\n    /*===============================\n    === Processing MC Submissions ===\n    ===============================*/\n    processMCMASubmission(logFlag) {\n        // Called when the submit button is clicked\n        this.getSubmittedOpts(); // make sure this.givenArray is populated\n        this.scoreMCMASubmission();\n        this.setLocalStorage({\n            correct: this.correct ? \"T\" : \"F\",\n            answer: this.givenArray.join(\",\"),\n        });\n        if (logFlag) {\n            this.logMCMAsubmission();\n        }\n        if (!eBookConfig.peer || eBookConfig.isInstructor) {\n            this.renderMCMAFeedBack();\n            if (this.useRunestoneServices) {\n                this.enableMCComparison();\n            }\n        } else {\n            // acknowledge submission\n            $(this.feedBackDiv).html(\"<p>Your Answer has been recorded</p>\");\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-info\");\n        }\n    }\n\n    getSubmittedOpts() {\n        var given;\n        this.singlefeedback = \"\"; // Used for MCMF questions\n        this.feedbackString = \"\"; // Used for MCMA questions\n        this.givenArray = [];\n        this.givenlog = \"\";\n        var buttonObjs = this.optsForm.elements.group1;\n        for (var i = 0; i < buttonObjs.length; i++) {\n            if (buttonObjs[i].checked) {\n                given = buttonObjs[i].value;\n                this.givenArray.push(given);\n                this.feedbackString += `<li value=\"${i + 1}\">${\n                    this.feedbackList[i]\n                }</li>`;\n                this.givenlog += given + \",\";\n                this.singlefeedback = this.feedbackList[i];\n            }\n        }\n        this.givenArray.sort();\n    }\n\n    checkCurrentAnswer() {\n        this.getSubmittedOpts();\n        if (this.multipleanswers) {\n            this.scoreMCMASubmission();\n        } else {\n            this.scoreMCMFSubmission();\n        }\n    }\n\n    async logCurrentAnswer(sid) {\n        if (this.multipleanswers) {\n            await this.logMCMAsubmission(sid);\n        } else {\n            await this.logMCMFsubmission(sid);\n        }\n    }\n\n    renderFeedback() {\n        if (this.multipleanswers) {\n            this.renderMCMAFeedBack();\n        } else {\n            this.renderMCMFFeedback();\n        }\n    }\n    scoreMCMASubmission() {\n        this.correctCount = 0;\n        var correctIndex = 0;\n        var givenIndex = 0;\n        while (\n            correctIndex < this.correctIndexList.length &&\n            givenIndex < this.givenArray.length\n        ) {\n            if (\n                this.givenArray[givenIndex] <\n                this.correctIndexList[correctIndex]\n            ) {\n                givenIndex++;\n            } else if (\n                this.givenArray[givenIndex] ==\n                this.correctIndexList[correctIndex]\n            ) {\n                this.correctCount++;\n                givenIndex++;\n                correctIndex++;\n            } else {\n                correctIndex++;\n            }\n        }\n        var numGiven = this.givenArray.length;\n        var numCorrect = this.correctCount;\n        var numNeeded = this.correctList.length;\n        this.answer = this.givenArray.join(\",\");\n        this.correct = numCorrect === numNeeded && numNeeded === numGiven;\n        if (numGiven === numNeeded) {\n            this.percent = numCorrect / numNeeded;\n        } else {\n            this.percent = numCorrect / Math.max(numGiven, numNeeded);\n        }\n    }\n\n    async logMCMAsubmission(sid) {\n        var answer = this.answer || \"\";\n        var correct = this.correct || \"F\";\n        var logAnswer =\n            \"answer:\" + answer + \":\" + (correct == \"T\" ? \"correct\" : \"no\");\n        let data = {\n            event: \"mChoice\",\n            act: logAnswer,\n            answer: answer,\n            correct: correct,\n            div_id: this.divid,\n        };\n        if (eBookConfig.peer && typeof studentVoteCount !== \"undefined\") {\n            data.act = data.act + `:vote${studentVoteCount}`;\n        }\n        if (typeof sid !== \"undefined\") {\n            data.sid = sid;\n        }\n        await this.logBookEvent(data);\n    }\n\n    renderMCMAFeedBack() {\n        var answerStr = \"answers\";\n        var numGiven = this.givenArray.length;\n        if (numGiven === 1) {\n            answerStr = \"answer\";\n        }\n        var numCorrect = this.correctCount;\n        var numNeeded = this.correctList.length;\n        var feedbackText = this.feedbackString;\n        if (this.correct) {\n            $(this.feedBackDiv).html(`✔️ <ol type=\"A\">${feedbackText}</ul>`);\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-info\");\n        } else {\n            $(this.feedBackDiv).html(\n                `✖️ You gave ${numGiven} ${answerStr} and got ${numCorrect} correct of ${numNeeded} needed.<ol type=\"A\">${feedbackText}</ul>`\n            );\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-danger\");\n        }\n    }\n\n    processMCMFSubmission(logFlag) {\n        // Called when the submit button is clicked\n        this.getSubmittedOpts(); // make sure this.givenArray is populated\n        this.scoreMCMFSubmission();\n        this.setLocalStorage({\n            correct: this.correct ? \"T\" : \"F\",\n            answer: this.givenArray.join(\",\"),\n        });\n        if (logFlag) {\n            this.logMCMFsubmission();\n        }\n        if (!eBookConfig.peer || eBookConfig.isInstructor) {\n            this.renderMCMFFeedback();\n            if (this.useRunestoneServices) {\n                this.enableMCComparison();\n            }\n        } else {\n            // acknowledge submission\n            $(this.feedBackDiv).html(\"<p>Your Answer has been recorded</p>\");\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-info\");\n        }\n    }\n\n    scoreMCMFSubmission() {\n        this.answer = this.givenArray[0];\n        if (this.givenArray[0] == this.correctIndexList[0]) {\n            this.correct = true;\n            this.percent = 1.0;\n        } else if (this.givenArray[0] != null) {\n            // if given is null then the question wasn\"t answered and should be counted as skipped\n            this.correct = false;\n            this.percent = 0.0;\n        }\n    }\n\n    async logMCMFsubmission(sid) {\n        // If there's no answer provided (the array is empty), use a blank for the answer.\n        var answer = this.givenArray[0] || \"\";\n        var correct =\n            this.givenArray[0] == this.correctIndexList[0] ? \"T\" : \"F\";\n        var logAnswer =\n            \"answer:\" + answer + \":\" + (correct == \"T\" ? \"correct\" : \"no\"); // backward compatible\n        let data = {\n            event: \"mChoice\",\n            act: logAnswer,\n            answer: answer,\n            correct: correct,\n            div_id: this.divid,\n        };\n        if (eBookConfig.peer && typeof studentVoteCount !== \"undefined\") {\n            data.act = data.act + `:vote${studentVoteCount}`;\n        }\n        if (typeof sid !== \"undefined\") {\n            data.sid = sid;\n        }\n        await this.logBookEvent(data);\n    }\n\n    renderMCMFFeedback() {\n        let correct = this.givenArray[0] == this.correctIndexList[0];\n        let feedbackText = this.singlefeedback;\n\n        if (correct) {\n            $(this.feedBackDiv).html(\"✔️ \" + feedbackText);\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-info\"); // use blue for better red/green blue color blindness\n        } else {\n            if (feedbackText == null) {\n                feedbackText = \"\";\n            }\n            $(this.feedBackDiv).html(\"✖️ \" + feedbackText);\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-danger\");\n        }\n    }\n    enableMCComparison() {\n        if (eBookConfig.enableCompareMe) {\n            this.compareButton.disabled = false;\n        }\n    }\n    instructorMchoiceModal(data) {\n        // data.reslist -- student and their answers\n        // data.answerDict    -- answers and count\n        // data.correct - correct answer\n        var res = \"<table><tr><th>Student</th><th>Answer(s)</th></tr>\";\n        for (var i in data) {\n            res +=\n                \"<tr><td>\" +\n                data[i][0] +\n                \"</td><td>\" +\n                data[i][1] +\n                \"</td></tr>\";\n        }\n        res += \"</table>\";\n        return res;\n    }\n    compareModal(data, status, whatever) {\n        var datadict = data.detail;\n        var answers = datadict.answerDict;\n        var misc = datadict.misc;\n        var kl = Object.keys(answers).sort();\n        var body = \"<table>\";\n        body += \"<tr><th>Answer</th><th>Percent</th></tr>\";\n        var theClass = \"\";\n        for (var k in kl) {\n            if (kl[k] === misc.correct) {\n                theClass = \"success\";\n            } else {\n                theClass = \"info\";\n            }\n            body +=\n                \"<tr><td>\" + kl[k] + \"</td><td class='compare-me-progress'>\";\n            var pct = answers[kl[k]] + \"%\";\n            body += \"<div class='progress'>\";\n            body +=\n                \"    <div class='progress-bar progress-bar-\" +\n                theClass +\n                \"' style='width:\" +\n                pct +\n                \";'>\" +\n                pct;\n            body += \"    </div>\";\n            body += \"</div></td></tr>\";\n        }\n        body += \"</table>\";\n        if (misc.yourpct !== \"unavailable\") {\n            body +=\n                \"<br /><p>You have \" +\n                misc.yourpct +\n                \"% correct for all questions</p>\";\n        }\n        if (datadict.reslist !== undefined) {\n            body += this.instructorMchoiceModal(datadict.reslist);\n        }\n        var html =\n            \"<div class='modal fade'>\" +\n            \"    <div class='modal-dialog compare-modal'>\" +\n            \"        <div class='modal-content'>\" +\n            \"            <div class='modal-header'>\" +\n            \"                <button type='button' class='close' data-dismiss='modal' aria-hidden='true'>&times;</button>\" +\n            \"                <h4 class='modal-title'>Distribution of Answers</h4>\" +\n            \"            </div>\" +\n            \"            <div class='modal-body'>\" +\n            body +\n            \"            </div>\" +\n            \"        </div>\" +\n            \"    </div>\" +\n            \"</div>\";\n        var el = $(html);\n        el.modal();\n    }\n    // _`compareAnswers`\n    compareAnswers() {\n        var data = {};\n        data.div_id = this.divid;\n        data.course_name = eBookConfig.course;\n        jQuery.get(\n            `${eBookConfig.new_server_prefix}/assessment/getaggregateresults`,\n            data,\n            this.compareModal.bind(this)\n        );\n    }\n\n    disableInteraction() {\n        for (var i = 0; i < this.optionArray.length; i++) {\n            this.optionArray[i].input.disabled = true;\n        }\n    }\n\n    enableInteraction() {\n        for (var i = 0; i < this.optionArray.length; i++) {\n            this.optionArray[i].input.disabled = false;\n        }\n    }\n}\n\n/*=================================\n== Find the custom HTML tags and ==\n==   execute our code on them    ==\n=================================*/\n$(document).on(\"runestone:login-complete\", function () {\n    $(\"[data-component=multiplechoice]\").each(function (index) {\n        // MC\n        var opts = {\n            orig: this,\n            useRunestoneServices: eBookConfig.useRunestoneServices,\n        };\n        if ($(this).closest(\"[data-component=timedAssessment]\").length == 0) {\n            // If this element exists within a timed component, don't render it here\n            window.mcList[this.id] = new MultipleChoice(opts);\n        }\n    });\n});\n","import MultipleChoice from \"./mchoice.js\";\n\nexport default class TimedMC extends MultipleChoice {\n    constructor(opts) {\n        super(opts);\n        $(this.containerDiv).addClass(\"runestone\");\n        this.needsReinitialization = true;\n        this.renderTimedIcon(this.MCContainer);\n        this.hideButtons(); // Don't show per-question buttons in a timed assessment\n    }\n\n    renderTimedIcon(component) {\n        // renders the clock icon on timed components.    The component parameter\n        // is the element that the icon should be appended to.\n        var timeIconDiv = document.createElement(\"div\");\n        var timeIcon = document.createElement(\"img\");\n        $(timeIcon).attr({\n            src: \"../_static/clock.png\",\n            style: \"width:15px;height:15px\",\n        });\n        timeIconDiv.className = \"timeTip\";\n        timeIconDiv.title = \"\";\n        timeIconDiv.appendChild(timeIcon);\n        $(component).prepend(timeIconDiv);\n    }\n    hideButtons() {\n        //Just hiding the buttons doesn't prevent submitting the form when entering is clicked\n        //We need to completely disable the buttons\n        $(this.submitButton).attr(\"disabled\", \"true\");\n        $(this.submitButton).hide();\n        $(this.compareButton).hide();\n    }\n\n    // These methods override the methods in the base class. Called from renderFeedback()\n    //\n    renderMCMAFeedBack() {\n        this.feedbackTimedMC();\n    }\n    renderMCMFFeedback(whatever, whateverr) {\n        this.feedbackTimedMC();\n    }\n    feedbackTimedMC() {\n        for (var i = 0; i < this.indexArray.length; i++) {\n            var tmpindex = this.indexArray[i];\n            $(this.feedBackEachArray[i]).html(\n                String.fromCharCode(65 + i) + \". \" + this.feedbackList[i]\n            );\n            var tmpid = this.answerList[tmpindex].id;\n            if (this.correctList.indexOf(tmpid) >= 0) {\n                this.feedBackEachArray[i].classList.add(\n                    \"alert\",\n                    \"alert-success\"\n                );\n            } else {\n                this.feedBackEachArray[i].classList.add(\n                    \"alert\",\n                    \"alert-danger\"\n                );\n            }\n        }\n    }\n    renderMCFormOpts() {\n        super.renderMCFormOpts();\n        this.feedBackEachArray = [];\n        for (var j = 0; j < this.answerList.length; j++) {\n            var k = this.indexArray[j];\n            var feedBackEach = document.createElement(\"div\");\n            feedBackEach.id = this.divid + \"_eachFeedback_\" + k;\n            feedBackEach.classList.add(\"eachFeedback\");\n            this.feedBackEachArray.push(feedBackEach);\n            this.optsForm.appendChild(feedBackEach);\n        }\n    }\n    checkCorrectTimedMCMA() {\n        if (\n            this.correctCount === this.correctList.length &&\n            this.correctList.length === this.givenArray.length\n        ) {\n            this.correct = true;\n        } else if (this.givenArray.length !== 0) {\n            this.correct = false;\n        } else {\n            // question was skipped\n            this.correct = null;\n        }\n        switch (this.correct) {\n            case true:\n                return \"T\";\n            case false:\n                return \"F\";\n            default:\n                return null;\n        }\n    }\n    checkCorrectTimedMCMF() {\n        // Returns if the question was correct, incorrect, or skipped (return null in the last case)\n        switch (this.correct) {\n            case true:\n                return \"T\";\n            case false:\n                return \"F\";\n            default:\n                return null;\n        }\n    }\n    checkCorrectTimed() {\n        if (this.multipleanswers) {\n            return this.checkCorrectTimedMCMA();\n        } else {\n            return this.checkCorrectTimedMCMF();\n        }\n    }\n    hideFeedback() {\n        for (var i = 0; i < this.feedBackEachArray.length; i++) {\n            $(this.feedBackEachArray[i]).hide();\n        }\n    }\n\n    reinitializeListeners() {\n        let self = this;\n        let answerFunc = function () {\n            self.isAnswered = true;\n        };\n        for (let opt of this.optionArray) {\n            opt.input.onclick = answerFunc;\n        }\n    }\n}\n\nif (typeof window.component_factory === \"undefined\") {\n    window.component_factory = {};\n}\n\nwindow.component_factory.multiplechoice = function (opts) {\n    if (opts.timed) {\n        return new TimedMC(opts);\n    } else {\n        return new MultipleChoice(opts);\n    }\n};\n"],"names":["window","mcList","MultipleChoice","constructor","opts","super","orig","this","origElem","useRunestoneServices","multipleanswers","divid","id","$","data","children","childNodes","random","is","correct","answerList","correctList","correctIndexList","feedbackList","question","caption","findAnswers","findQuestion","findFeedbacks","createCorrectList","createMCForm","addCaption","checkServer","self","runestoneMathready","runestoneMathReady","then","queueMathJax","containerDiv","delimiter","i","length","nodeName","outerHTML","temp","html","split","ChildAnswerList","push","j","answer_id","attr","is_correct","answer_object","content","innerHTML","renderMCContainer","renderMCForm","renderMCfeedbackDiv","replaceWith","document","createElement","addClass","getAttribute","optsForm","method","action","onsubmit","renderMCFormOpts","renderMCFormButtons","appendChild","optionArray","input_type","indexArray","randomizeAnswers","answerFunc","isAnswered","k","optid","label","prefix","startsWith","slice","String","fromCharCode","charCodeAt","optObj","input","find","onclick","submitButton","textContent","class","name","type","addEventListener","processMCMASubmission","bind","ev","preventDefault","processMCMFSubmission","eBookConfig","peer","compareButton","disabled","compareAnswers","feedBackDiv","temporaryValue","randomIndex","currentIndex","Math","floor","temporaryFeedback","restoreAnswers","answer","answers","a","index","b","value","checkLocalStorage","graderactive","localStorage","ex","getItem","localStorageKey","JSON","parse","err","console","log","message","removeItem","enableMCComparison","getSubmittedOpts","logMCMAsubmission","logMCMFsubmission","setLocalStorage","timeStamp","Date","storageObj","timestamp","setItem","stringify","logFlag","scoreMCMASubmission","givenArray","join","isInstructor","renderMCMAFeedBack","given","singlefeedback","feedbackString","givenlog","buttonObjs","elements","group1","checked","sort","checkCurrentAnswer","scoreMCMFSubmission","async","sid","renderFeedback","renderMCMFFeedback","correctCount","correctIndex","givenIndex","numGiven","numCorrect","numNeeded","percent","max","event","act","div_id","studentVoteCount","logBookEvent","answerStr","feedbackText","enableCompareMe","instructorMchoiceModal","res","compareModal","status","whatever","datadict","detail","answerDict","misc","kl","Object","keys","body","theClass","pct","yourpct","undefined","reslist","modal","course_name","course","jQuery","get","new_server_prefix","disableInteraction","enableInteraction","on","each","closest","TimedMC","needsReinitialization","renderTimedIcon","MCContainer","hideButtons","component","timeIconDiv","timeIcon","src","style","className","title","prepend","hide","feedbackTimedMC","whateverr","tmpindex","feedBackEachArray","tmpid","indexOf","classList","add","feedBackEach","checkCorrectTimedMCMA","checkCorrectTimedMCMF","checkCorrectTimed","hideFeedback","reinitializeListeners","opt","component_factory","multiplechoice","timed"],"sourceRoot":""}